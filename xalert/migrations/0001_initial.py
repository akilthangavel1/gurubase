# Generated by Django 5.1.5 on 2025-07-04 15:01

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('MA_CROSSOVER', 'Moving Average Crossover'), ('MA_ABOVE', 'Price Above Moving Average'), ('MA_BELOW', 'Price Below Moving Average')], default='MA_CROSSOVER', max_length=20)),
                ('ma_short_period', models.IntegerField(default=20, help_text='Short moving average period (e.g., 20)')),
                ('ma_long_period', models.IntegerField(default=50, help_text='Long moving average period (e.g., 50)')),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, help_text='Target price for price-based alerts', max_digits=10, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('TRIGGERED', 'Triggered')], default='ACTIVE', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.tickerbase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'ticker', 'alert_type', 'ma_short_period', 'ma_long_period')},
            },
        ),
        migrations.CreateModel(
            name='AlertHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trigger_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('trigger_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy Signal'), ('SELL', 'Sell Signal'), ('PRICE', 'Price Alert')], max_length=10)),
                ('ma_short_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ma_long_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='xalert.alert')),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.tickerbase')),
            ],
            options={
                'ordering': ['-trigger_date'],
            },
        ),
        migrations.CreateModel(
            name='MovingAverageSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('close_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ma_20', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ma_50', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ma_crossover_signal', models.CharField(choices=[('BUY', 'Buy Signal'), ('SELL', 'Sell Signal'), ('NEUTRAL', 'Neutral')], default='NEUTRAL', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.tickerbase')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('ticker', 'date')},
            },
        ),
    ]
